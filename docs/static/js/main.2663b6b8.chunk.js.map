{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","cats","type","value","onChange","e","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","elem","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEdC,mBAAS,IAFK,mBAE3CC,EAF2C,KAE/BC,EAF+B,KAoBlD,OACE,0BAAMC,SAbc,SAACC,GACrBA,EAAMC,iBAEHJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAQd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SArBqB,SAACC,GAC1BV,EAAcU,EAAEC,OAAOH,YCPdI,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACtC,OACE,yBAAKC,UAAU,4DACb,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCNEK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfN,EAFe,iDAEiCO,UAAUF,GAF3C,+DAGFG,MAAMR,GAHJ,cAGfS,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAS,IAAD,EAC5B,MAAO,CACLhB,GAAIgB,EAAKhB,GACTC,MAAOe,EAAKf,MACZC,IAAG,UAAEc,EAAKC,cAAP,aAAE,EAAaC,iBAAiBhB,QAVlB,kBAedY,GAfc,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EAEdtB,mBAAS,CACjC4B,KAAM,GACNO,SAAS,IAJ6B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAsBxC,OAfAC,qBAAU,WAETjB,EAAQC,GACPiB,MAAK,SAAAC,GAEHH,EAAS,CACPT,KAAMY,EACNL,SAAS,SAMZ,CAACb,IAEGc,EDnByBK,CAAanB,GAAhCU,EAF0B,EAEhCJ,KAAcO,EAFkB,EAElBA,QAErB,OACE,oCACA,wBAAIjB,UAAU,qCAAsCI,GAEnDa,GAAW,uBAAGjB,UAAU,qCAAb,cAEZ,yBAAKA,UAAU,aAEXc,EAAOF,KAAK,SAAAY,GAAG,OACb,kBAAC,EAAD,eACEC,IAAKD,EAAI3B,IACL2B,UEFHE,EAAe,WAAM,MAGI5C,mBAAS,CAAC,cAHd,mBAGzB6C,EAHyB,KAGb9C,EAHa,KAKhC,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BACA,4BAEI8C,EAAWf,KAAI,SAAAR,GAAQ,OACrB,kBAAC,EAAD,CACEqB,IAAQrB,EACRA,SAAaA,U,MC3B3BwB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.2663b6b8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handledInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handledSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(inputValue.trim().length > 2){\r\n\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit= { handledSubmit }>\r\n      <input \r\n        type=\"text\" \r\n        value={ inputValue }\r\n        onChange={ handledInputChange }\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes  = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n      <img src={ url } alt={ title } />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=1x6cQxAdx014BGHe4jDpgPYe2mLjth1r`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map(elem => {\r\n    return {\r\n      id: elem.id,\r\n      title: elem.title,\r\n      url: elem.images?.downsized_medium.url\r\n\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const {data: images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n    <h3 className=\"animate__animated animate__bounce\">{ category }</h3>\r\n\r\n    {loading && <p className=\"animate__animated animate__bounce\">Cargando..</p>}\r\n\r\n    <div className=\"card-grid\">\r\n      {\r\n        images.map( img => (  \r\n          <GifGridItem \r\n            key={img.id}\r\n            {...img}\r\n          />\r\n        ))\r\n\r\n      }\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n\r\n   getGifs(category)\r\n   .then(imgs => {\r\n\r\n      setState({\r\n        data: imgs,\r\n        loading: false\r\n  \r\n      });\r\n\r\n   });\r\n\r\n  }, [category]);\r\n\r\n  return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n// const useAdd = () => {\r\n  \r\n//   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n//   const handledAdd = (inputValue) => {\r\n//     //setCategories([...categories, inputValue]);\r\n//     setCategories(cats => [...cats, inputValue]);\r\n//   }\r\n\r\n//   return {categories, handledAdd}\r\n// }\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  //const {categories, handledAdd} = useAdd();\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <>\r\n      <h1 >GifExpertApp</h1>\r\n      <AddCategory setCategories = { setCategories }/>\r\n      <hr/>\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid \r\n              key = { category }\r\n              category = { category } \r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}